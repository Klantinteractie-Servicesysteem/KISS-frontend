name: Build & Release (Versioned)

on:
  push:
    tags: ["v*.*.*"]  # Alleen triggeren op version tags
  workflow_dispatch:   # Handmatig kunnen triggeren voor testen

env:
  REGISTRY: ghcr.io
  BFF_IMAGE: ghcr.io/${{ github.repository_owner }}/kiss-bff
  SHOULD_PUSH: true
  SHOULD_RELEASE: ${{ startsWith(github.ref, 'refs/tags/v') }}
  IS_LATEST: false
  VERSION: ""
  REVISION: ""

permissions:
  contents: read
  packages: write

jobs:
  build-versioned:
    runs-on: ubuntu-latest
    name: Build Versioned Images

    steps:
      - uses: actions/checkout@v4

      - name: "Find the latest release tag (determined by semver sort)"
        id: latest-semver
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          REPO_URL: ${{ github.event.repository.html_url }}
          TAG_FILTER: '^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$'
        run: |
          TAG=$(\
            git ls-remote --exit-code --refs --tags --sort='-v:refname' "$REPO_URL" \
            | awk '{print $2}' | grep -E "$TAG_FILTER" | head -n 1
          )
          echo "tag-ref=${TAG}" >> "$GITHUB_OUTPUT"
          if [ "$TAG" = "${{ github.ref }}" ] ; then
              echo "IS_LATEST=true" >> "$GITHUB_ENV"
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata for BFF
        id: meta-bff
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=${{ env.IS_LATEST }}
          images: |
            ${{ env.BFF_IMAGE }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=test-{{sha}},enable={{is_default_branch}}

      - name: Set version and revision in env
        run: |
          echo "VERSION=${{ fromJson(env.SHOULD_RELEASE) && fromJSON(steps.meta-bff.outputs.json).labels['org.opencontainers.image.version'] || '0.0.0' }}" >> "$GITHUB_ENV"
          echo "REVISION=${{ fromJSON(steps.meta-bff.outputs.json).labels['org.opencontainers.image.revision'] }}" >> "$GITHUB_ENV"
          
          echo "Building with VERSION=${{ env.VERSION }} and REVISION=${{ env.REVISION }}"

      - name: Build & push BFF image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Kiss.Bff/Dockerfile
          push: true
          tags: ${{ steps.meta-bff.outputs.tags }}
          labels: ${{ steps.meta-bff.outputs.labels }}
          build-args: |
            VERSION=${{ env.VERSION }}
            REVISION=${{ env.REVISION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Version: ${{ env.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- Revision: ${{ env.REVISION }}" >> $GITHUB_STEP_SUMMARY
          echo "- Tags: ${{ steps.meta-bff.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "- Is Latest: ${{ env.IS_LATEST }}" >> $GITHUB_STEP_SUMMARY

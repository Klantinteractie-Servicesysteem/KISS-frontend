---
#################################
#################################
## Super Linter GitHub Actions ##
#################################
#################################
name: Code quality checks

#######################################
# Start the job on all push or manual #
#######################################
on:
  pull_request:
    branches: [main, "*.*.*", OudNaastNieuw]
    
  workflow_dispatch:
  
###############
# Set the Job #
###############
jobs:
  build:
    # Name the Job
    name: Lint Code Base
    # Set the agent to run on
    runs-on: ubuntu-latest

    ############################################
    # Grant status permission for MULTI_STATUS #
    ############################################
    permissions:
      contents: read
      packages: read
      statuses: write

    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper
          # list of changed files within `super-linter`
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run lint --if-present

      ################################
      # Run Linter against code base #
      ################################
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.x.x"

      - name: Install dotnet-format tool
        working-directory: ./Kiss.Bff
        run: dotnet tool install -g dotnet-format

      - name: Run dotnet format
        working-directory: ./Kiss.Bff
        run: dotnet format --verbosity diagnostic
